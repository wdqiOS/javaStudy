// 位操作运算符
public class BitOperatorDemo1 {
    public static void main(String[] args) {
        /*
            遵循规则：
            &：参与运算的两个数，若相应位数的值都为1，则该位结果值是1，否则是0；
            |: 参与运算的两个数相应位数的值有一个为1，结果就是1；
            ^: 参与运算的两个数相应位相同则结果为0，否则为1；
            ~: 表示把每个二进制位的‘1’换成‘0’，把‘0’换成‘1’

            3的二进制：00000011
            5的二进制：00000101
                
                00000011
             &  00000101
            ------------------------
                00000001 ----> 1

                00000011
             |  00000101
            ------------------------
                00000111 ----> 1 + 2 + 4 = 7

                00000011
             ^  00000101
            ------------------------
                00000110 ----> 2 + 4 = 6

            ~   00000101
            -----------------------
                11111010 // 反码
                11111011 // 补码 -6
         */
        System.out.println(3 & 5); // 1
        System.out.println(3 | 5); // 7
        System.out.println(3 ^ 5); // 6
        System.out.println(~5); // -6 
    }
}